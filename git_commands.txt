


$ git checkout -b my-feature  --- creates and checkouts a new branch

$ echo "This is my new feature" > feature.txt ---creates a text file with some text

$ git push --set-upstream origin my-feature ---push the current branch and set the remote as upstream

$ git fetch
$ git add --all
$ git log --oneline
$ git show                         ---shows the most recent commit on the current branch
$ git remove <file_name>

git remote add origin https://github.com/ahfontalba/git-playground.git
git push -u origin main


---create a new repository on the command line---

echo "# git-playground" > README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/ahfontalba/git-playground.git
git push -u origin main


git push --set-upstream origin main  -- set-upstream is only needed the first time to push to a remote repo


$ git remote --verbose   --- displays the repo url and the the name of the main remote repo: normally origin


---push an existing repository from the command line---
git remote add origin https://github.com/ahfontalba/git-playground.git
git branch -M main
git push -u origin main

---list all remote branches---
git branch --all

---get latest changes---
git fetch is the same as git pull but does not automatically update your local master branch
with the changes it has fetched

---create and checkout a branch---
git checkout -b my-feature

---check curent branch
git branch


-- delete a local branch
$ git branch -d <my_branch>
$ git branch -D <my_branch>  --- deletesa branch despite having uncommitted changes

-- delete a remote branch
$ git push origin --delete <remote-branch-name>
